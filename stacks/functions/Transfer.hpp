// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Pragma.
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#pragma once


// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Imports.
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include <algorithm>


// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Transfer functions.
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
namespace sx
{
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// Linear transfer function.
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	template<class T = DEF_t> struct LinearTr_fn
	{
		constexpr static auto RAW = false;


		constexpr static inline T trans ( const T _X )
		{ 
			return _X;
		}
		

		constexpr static inline T der ( const T _FX )
		{
			return T(1);
		}
	};


	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// Sigmoid transfer function.
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	template<class T = DEF_t> struct SigmoidTr_fn
	{
		constexpr static auto RAW = false;
		

		constexpr static inline T trans ( const T _X )
		{ 
			return (T(1) / (T(1) + std::exp(-_X)));
		}
		

		constexpr static inline T der ( const T _FX )
		{
			return (_FX * (T(1) - _FX));
		}
	};


	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// Tanh transfer function.
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	template<class T = DEF_t> struct TanhTr_fn
	{
		constexpr static auto RAW = false;


		constexpr static inline T trans ( const T _X )
		{ 
			return (T(2) / (T(1) + std::exp(-_X * T(2)))) - T(1);
		}
		

		constexpr static inline T der ( const T _FX )
		{
			return T(1) - std::pow(_FX, T(2));
		}
	};


	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// RELU transfer function.
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	template<class T = DEF_t> struct ReluTr_fn
	{
		constexpr static auto RAW = true;


		constexpr static inline T trans ( const T _X )
		{
			return std::max(T(0), _X);
		}
		

		constexpr static inline T der ( const T _X )
		{
			return _X > T(0);
		}
	};

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// Leaky RELU transfer function.
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	template<class T = DEF_t> struct LeluTr_fn
	{
		constexpr static auto RAW = true;


		constexpr static inline T trans ( const T _X )
		{ 
			if(_X > T(0)) return _X;
			else return _X * T(0.1);
		}
		

		constexpr static inline T der ( const T _X )
		{
			if(_X > 0) return T(1);
			else return T(0.1);
		}
	};
}
